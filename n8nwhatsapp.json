{
  "name": "Stock Agent",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -288,
        -64
      ],
      "id": "dd85f1fa-2a81-4c2f-8c33-4940cf534a35",
      "name": "When chat message received",
      "webhookId": "WEBHOOK_ID_PLACEHOLDER"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=# Comprehensive Stock Analysis Framework\n\n## Step 1 – Ticker Check\nIdentify the official stock ticker from the user's request. Confirm if ambiguous.\n\n## Step 2 – Quant Snapshot & Chart\nUse the Stock Tool to pull key financials + generate a basic price chart.\n\n## Step 3 – Sentiment & News\nQuery Tavily for recent sentiment, analyst outlooks, and major developments (e.g., earnings, targets, competition, product moves).\n\n## Step 4 – Multi-Timeframe Technical Analysis\n### Chart Analysis Requirements:\n- **1-minute chart**: Scalping signals and immediate momentum\n- **5-minute chart**: Short-term trend confirmation and entry/exit timing\n- **15-minute chart**: Swing trading signals and intermediate trend direction\n- **Daily/Weekly**: Overall trend context and major support/resistance levels\n\n### Step 5 Technical Indicators to Include:\n- **MACD**: Signal line crosses, histogram divergence\n- **RSI**: Overbought/oversold levels (70/30 thresholds)\n- **Moving Averages**: 9, 21, 50, 200 EMA alignment\n- **Volume**: Confirmation of price movements\n- **Support/Resistance**: Key levels across timeframes\n- **Trend Lines**: Breakouts and breakdowns\n\n### Step6 Buy/Sell Signal Analysis:\n#### BUY SIGNALS:\n- Multiple timeframe alignment (bullish across 1m, 5m, 15m)\n- MACD bullish crossover with rising histogram\n- RSI recovering from oversold (<30) or breaking above 50\n- Price breaking above key resistance with volume\n- Moving average golden cross (short MA > long MA)\n\n#### SELL SIGNALS:\n- Bearish divergence across timeframes\n- MACD bearish crossover with declining histogram\n- RSI declining from overbought (>70) or breaking below 50\n- Price failing at resistance or breaking key support\n- Moving average death cross (short MA < long MA)\n\n### Entry/Exit Recommendations:\n- **Potential Buy Levels**: Support zones, pullback entries, breakout confirmations\n- **Potential Sell Levels**: Resistance zones, profit targets, stop-loss levels\n- **Position Sizing**: Risk management based on volatility\n- **Time Horizon**: Scalp (minutes), day trade (hours), swing (days-weeks)\n\n## Step 5 – Synthesis\n**Financials**: Briefly summarize metrics.\n**Technicals**: Highlight key chart analysis across all timeframes (1m, 5m, 15m, daily). Reference specific buy/sell signals.\n**Sentiment**: Blend news flow with market tone.\n**Cross-Check**: Note confirmations (bullish news + bullish chart + buy signals) or divergences (bearish chart vs positive news vs mixed signals).\n\n## Step 6 – Final Report\nDeliver a structured, concise analysis with these sections:\n\n### 📌 Snapshot \n2–3 sentence overview with current bias (bullish/bearish/neutral)\n\n### 📈 Quantitative Metrics \nKey financial numbers and ratios\n\n### 📊 Multi-Timeframe Technicals\n- **1-Minute**: Immediate momentum and scalping opportunities\n- **5-Minute**: Short-term entry/exit signals\n- **15-Minute**: Swing trading setup and trend confirmation\n- **Daily/Weekly**: Overall trend context\n\n### 🎯 Trading Signals\n- **Current Signal**: BUY/SELL/HOLD with confidence level\n- **Entry Zone**: Specific price levels for position initiation\n- **Stop Loss**: Risk management exit point\n- **Profit Targets**: Multiple take-profit levels\n- **Risk/Reward Ratio**: Expected return vs potential loss\n\n### 📰 Sentiment & News \nRecent highlights and market drivers\n\n### 🔎 Integrated Outlook \nBalanced forward view incorporating:\n- Technical signal alignment across timeframes\n- Fundamental catalysts and risks\n- Market sentiment and news flow\n- Recommended trading strategy and time horizon\n\n### 🖼️ Chart References\nInclude links to charts if available, with specific callouts to:\n- Key technical levels identified\n- Signal confirmations across timeframes\n- Entry/exit zones highlighted\n\n### ⚠️ Risk Disclaimer\n\"This analysis is for educational purposes only. Past performance does not guarantee future results. Always conduct your own research and consider your risk tolerance before making investment decisions.\"\n\n{{$now}}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        16,
        -64
      ],
      "id": "f765534b-62e0-4471-8f59-8ead3995157b",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "openai/gpt-4o-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -128,
        144
      ],
      "id": "ee87a18f-6168-4626-8fec-491dc6d87884",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "YOUR_OPENROUTER_CREDENTIAL_ID",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        0,
        144
      ],
      "id": "6f6864bc-7eb7-41cc-9bd9-d6df579120fb",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "description": "Call this tool to conduct technical analysis",
        "workflowId": {
          "__rl": true,
          "value": "YOUR_WORKFLOW_ID",
          "mode": "list",
          "cachedResultName": "ToolDemo"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        112,
        144
      ],
      "id": "b8c07a14-8e05-4715-841c-d53d206ecaa5",
      "name": "StockTool"
    },
    {
      "parameters": {
        "toolDescription": "call this tool to conduct sentiment analysis on the stock.\n",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR_TAVILY_API_KEY"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', ``, 'string') }}"
            },
            {
              "name": "days",
              "value": "7"
            },
            {
              "name": "search_depth",
              "value": "advanced"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        224,
        144
      ],
      "id": "9b552ab8-07a0-46bb-a460-981dd6729f78",
      "name": "Tavily"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "StockTool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Tavily": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "UNIQUE_VERSION_ID",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "UNIQUE_INSTANCE_ID"
  },
  "id": "UNIQUE_WORKFLOW_ID",
  "tags": []
}